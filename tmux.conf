# generally, i've found most modern terminals include the
# tmux terminfo extensions.
set-option -s default-terminal "tmux-256color"
set-option -sa terminal-overrides ",*:Tc"
#set-option -sa terminal-features ",*:RGB"

# enable the mouse
set-option -g mouse on

# start window numbers at 1
set-option -g base-index 1

# shorten the escape delay
set-option -s escape-time 0

# set the clock to 12hr
set-option -g clock-mode-style 12

# renumber the windows if one is closed
set-option -g renumber-windows on

# increase scrollback buffer size
set-option -g history-limit 50000

# bind a key to reload the config
bind r source-file "~/.config/tmux/tmux.conf"

# status bar position
set-option -g status-position bottom
# status bar update interval
set-option -g status-interval 5

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set-option -g status-keys emacs

# tmux messages are displayed for 4 seconds
set-option -g display-time 4000

# focus events enabled for terminals that support them
set-option -g focus-events on

set-option -g automatic-rename on
# super useful when using "grouped sessions" and multi-monitor setup
set-window-option -g aggressive-resize on

# status bar style defaulted
set-option -g status-style bg=black,fg=white
set-option -g status-position top
set-option -g status-justify absolute-centre
set-option -g window-status-format "\
#[bg=black,fg=colour240] #I\
:\
#W #[default]\
"

set-option -g window-status-current-format "\
#[bg=yellow,fg=black] #I\
:\
#W #[default]\
"
set-option -g window-status-separator ""



set-option -g status-left "#[bg=yellow,fg=black] #S #[default]"
set-option -g status-left-length 80
set-option -g status-right ""
set-option -g status-right-length 80
bind-key b set-option status

# pass the pane title through to the terminal emulator
set-option -g set-titles on
set-option -g set-titles-string "#{pane_title}"

# enable all keys
set-option -g extended-keys on

# change the prefix (vim uses C-b)
set-option -g prefix C-a
# unbind the original send-prefix
unbind-key C-b
# bind the new send-prefix
bind-key C-a send-prefix

# C-a + a switches between windows
bind-key a last-window

# stay in current directory when splitting
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

bind-key S resize-pane -y 2
# # bindings
# bind k select-pane -U
# bind j select-pane -D
# bind h select-pane -L
# bind l select-pane -R
# source-file "$HOME/.config/tmux/extra/minimal-tmux-status/minimal.tmux"

#
# vim-tmux-navigator
#
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"
bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

